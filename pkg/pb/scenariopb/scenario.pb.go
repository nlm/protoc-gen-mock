// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: scenario.proto

package scenariopb

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scenario struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoints map[string]*Scenario_Mock `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Scenario) Reset() {
	*x = Scenario{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario) ProtoMessage() {}

func (x *Scenario) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario.ProtoReflect.Descriptor instead.
func (*Scenario) Descriptor() ([]byte, []int) {
	return file_scenario_proto_rawDescGZIP(), []int{0}
}

func (x *Scenario) GetEndpoints() map[string]*Scenario_Mock {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

type Scenario_Mock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*Scenario_Mock_Content
	//	*Scenario_Mock_Status
	Response isScenario_Mock_Response `protobuf_oneof:"response"`
}

func (x *Scenario_Mock) Reset() {
	*x = Scenario_Mock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scenario_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario_Mock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario_Mock) ProtoMessage() {}

func (x *Scenario_Mock) ProtoReflect() protoreflect.Message {
	mi := &file_scenario_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario_Mock.ProtoReflect.Descriptor instead.
func (*Scenario_Mock) Descriptor() ([]byte, []int) {
	return file_scenario_proto_rawDescGZIP(), []int{0, 0}
}

func (m *Scenario_Mock) GetResponse() isScenario_Mock_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *Scenario_Mock) GetContent() *structpb.Struct {
	if x, ok := x.GetResponse().(*Scenario_Mock_Content); ok {
		return x.Content
	}
	return nil
}

func (x *Scenario_Mock) GetStatus() *status.Status {
	if x, ok := x.GetResponse().(*Scenario_Mock_Status); ok {
		return x.Status
	}
	return nil
}

type isScenario_Mock_Response interface {
	isScenario_Mock_Response()
}

type Scenario_Mock_Content struct {
	Content *structpb.Struct `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type Scenario_Mock_Status struct {
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

func (*Scenario_Mock_Content) isScenario_Mock_Response() {}

func (*Scenario_Mock_Status) isScenario_Mock_Response() {}

var File_scenario_proto protoreflect.FileDescriptor

var file_scenario_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x08, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x75, 0x0a,
	0x04, 0x4d, 0x6f, 0x63, 0x6b, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x4c, 0x0a, 0x0e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x3b, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scenario_proto_rawDescOnce sync.Once
	file_scenario_proto_rawDescData = file_scenario_proto_rawDesc
)

func file_scenario_proto_rawDescGZIP() []byte {
	file_scenario_proto_rawDescOnce.Do(func() {
		file_scenario_proto_rawDescData = protoimpl.X.CompressGZIP(file_scenario_proto_rawDescData)
	})
	return file_scenario_proto_rawDescData
}

var file_scenario_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_scenario_proto_goTypes = []interface{}{
	(*Scenario)(nil),        // 0: Scenario
	(*Scenario_Mock)(nil),   // 1: Scenario.Mock
	nil,                     // 2: Scenario.EndpointsEntry
	(*structpb.Struct)(nil), // 3: google.protobuf.Struct
	(*status.Status)(nil),   // 4: google.rpc.Status
}
var file_scenario_proto_depIdxs = []int32{
	2, // 0: Scenario.endpoints:type_name -> Scenario.EndpointsEntry
	3, // 1: Scenario.Mock.content:type_name -> google.protobuf.Struct
	4, // 2: Scenario.Mock.status:type_name -> google.rpc.Status
	1, // 3: Scenario.EndpointsEntry.value:type_name -> Scenario.Mock
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_scenario_proto_init() }
func file_scenario_proto_init() {
	if File_scenario_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scenario_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scenario_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario_Mock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_scenario_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Scenario_Mock_Content)(nil),
		(*Scenario_Mock_Status)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scenario_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scenario_proto_goTypes,
		DependencyIndexes: file_scenario_proto_depIdxs,
		MessageInfos:      file_scenario_proto_msgTypes,
	}.Build()
	File_scenario_proto = out.File
	file_scenario_proto_rawDesc = nil
	file_scenario_proto_goTypes = nil
	file_scenario_proto_depIdxs = nil
}

syntax = "proto3";

package demopb;

option go_package = ".;demopb";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "annotations.proto";

service Api {

  rpc ListPersons(ListPersonsRequest) returns (ListPersonsResponse) {
    option (google.api.http) = {
      get: "/api/v1/persons"
    };
  }

  rpc GetPerson(GetPersonRequest) returns (Person) {
    option (google.api.http) = {
      get: "/api/v1/persons/{person_id}"
    };
  }

  rpc CreatePerson(CreatePersonRequest) returns (Person) {
    option (google.api.http) = {
      post: "/api/v1/persons"
      body: "*"
    };
  }

  rpc DeletePerson(DeletePersonRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/persons/{person_id}"
    };
  }

}

message Person {
  enum Type {
    individual = 0;
    company = 1;
  }
  string id    = 1 [(demopb.type) = uuid];
  string name  = 2;
  string email = 3;
  Type type = 4;
  map<string, string> attributes = 5;
}

message ListPersonsRequest {
  google.protobuf.StringValue project_id = 1 [(demopb.type) = uuid];

  google.protobuf.Int32Value page      = 10;
  google.protobuf.Int32Value page_size = 11;
}

message ListPersonsResponse {
  repeated Person persons = 1;

  uint32 total_count = 10;
}

message GetPersonRequest { 
  string person_id = 1;
}

message CreatePersonRequest {
  google.protobuf.StringValue project_id = 1;
  Person person = 2;
}

message DeletePersonRequest { 
  string person_id = 1;
}